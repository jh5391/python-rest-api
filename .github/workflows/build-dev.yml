# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      BUILD_VERSION: $GITHUB_RUN_NUMBER

    steps:
    - uses: actions/checkout@v3    
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app --count --exit-zero --max-complexity=10 --max-line-length=200 --statistics

    - name: Create .env file
      run: |
        jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        cat .env

      env:
        SECRETS_CONTEXT: ${{ toJson(secrets) }}

    - name: up docker-compose-db
      run: |
        docker-compose -f docker-compose-db.yml up -d

    - name: Test with pytest
      run: |
        timeout 30 sh -c "until mysqladmin ping -u"${{ secrets.DATABASE_USERNAME }}" -p"${{ secrets.DATABASE_PASSWORD }}" -h"${{ secrets.DATABASE_HOSTNAME }}"; do echo .; sleep 5; done >/dev/null" >/dev/null
        pytest -v tests

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: build docker-compose-dev
      run: |
        docker-compose -f docker-compose-dev.yml build development
        docker-compose -f docker-compose-dev.yml build versioning
        
    - name: push docker-compose-dev
      run: |
        docker-compose -f docker-compose-dev.yml push development
        docker-compose -f docker-compose-dev.yml push versioning